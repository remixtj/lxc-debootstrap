#!/bin/sh

# Oopss.org [http://oopss.org]
# Thomas Martin <thomas@oopss.org>

set -e
LC_ALL=C

usage() {
	cat <<EOT
Usage: $0 HOSTNAME DISKSIZE NUMBER

Create LXC virtual machine.

Example :
$0 test1.oopss.net 5G 42
EOT
}

if [ $# != 3 ]; then
	usage
	exit 1
fi

set_var() {
	printf "%-20s %s\n" $1 $2
	eval $1=$2
}

echo
echo "Environment variables (overwritable)"
echo "------------------------------------"
set_var LXC_VG_NAME ${LXC_VG_NAME:="lxc"}
set_var LXC_PATH ${LXC_PATH:="/var/lib/lxc"}
set_var DEBIAN_MIRROR ${DEBIAN_MIRROR:="http://debian.mirrors.ovh.net/debian"}
set_var DEBIAN_MIRROR_2 ${DEBIAN_MIRROR_2:="http://ftp.oopss.org/debian"}
set_var BASE_PACKAGES ${BASE_PACKAGES:="openssh-server,net-tools,netbase,iputils-ping,dnsutils,ifupdown,apt-utils"}
set_var DEBIAN_SUITE ${DEBIAN_SUITE:="squeeze"}
set_var NETWORK ${NETWORK:="10.42.0"}
set_var NETMASK ${NETMASK:="255.255.255.0"}
set_var GATEWAY ${GATEWAY:="10.42.0.254"}
set_var BRIDGE_INTERFACE ${BRIDGE_INTERFACE:="br0"}
set_var MACADDRBASE ${MACADDRBASE:="42:00:00:00:00"}
set_var DNS ${DNS:="10.42.0.254"}
set_var SSH_PUBFILE ${SSH_PUBFILE:="/root/.ssh/id_rsa.pub"}
set_var SSH_KNOWNHOSTS_FILE ${SSH_KNOWNHOSTS_FILE:="/root/.ssh/known_hosts"}

echo
echo "Container parameters"
echo "--------------------"
set_var lxc_hostname "$1"
set_var lxc_name $(echo $lxc_hostname | sed 's/\..*//')
set_var lxc_rootpath "$LXC_PATH/$lxc_name"
set_var lxc_rootfs "$lxc_rootpath/rootfs"
set_var lxc_config "$lxc_rootpath/config"
set_var lvm_disksize "$2"
set_var lvm_volpath "/dev/mapper/$LXC_VG_NAME-$lxc_name"
set_var macaddr "$MACADDRBASE:$3"
set_var ipaddr "$NETWORK.$3"

echo $vars
echo -n "Create ? "
read res
if [ "$res" != 'y' ] && [ "$res" != "Y" ]; then
	echo "Aborting."
	exit 1
fi

echo
echo "creating logical volume $lvm_volpath"
lvcreate -L $lvm_disksize -n $lxc_name $LXC_VG_NAME >/dev/null

echo "creating filesystem on $lvm_volpath"
mkfs.ext4 -q $lvm_volpath

echo "creating root directory $lxc_rootpath"
mkdir $lxc_rootpath

echo "adding entry in /etc/fstab"
echo "$lvm_volpath $lxc_rootpath ext4 defaults 0 2" >>/etc/fstab

echo "mount $lvm_volpath on $lxc_rootpath using fstab"
mount $lxc_rootpath

echo "populating $lxc_rootfs using debootstrap"
debootstrap \
    --verbose --variant=minbase --arch=amd64 --include $BASE_PACKAGES \
    $DEBIAN_SUITE $lxc_rootfs $DEBIAN_MIRROR >/dev/null

echo "networking : setting hostname"
echo $lxc_hostname >"$lxc_rootfs/etc/hostname"

echo "networking : setting DNS resolver $net_resolver"
echo "nameserver $DNS" >"$lxc_rootfs/etc/resolv.conf"

echo "networking : setting IP configuration"
cat <<EOT >"$lxc_rootfs/etc/network/interfaces"
auto eth0
iface eth0 inet static
    address $ipaddr
    netmask $NETMASK
    gateway $GATEWAY
EOT

echo "disabling useless tty"
sed -i 's/^[1-6]:/#&/' "$lxc_rootfs/etc/inittab"

echo "remove pointless services in a container"
chroot $lxc_rootfs /usr/sbin/update-rc.d -f umountfs remove >/dev/null
chroot $lxc_rootfs /usr/sbin/update-rc.d -f hwclock.sh remove >/dev/null
chroot $lxc_rootfs /usr/sbin/update-rc.d -f hwclockfirst.sh remove >/dev/null

echo "disabling root password"
chroot $lxc_rootfs passwd -l root >/dev/null

echo "adding SSH keys"
mkdir -p -m 700 "$lxc_rootfs/root/.ssh/"
[ -f $SSH_PUBFILE ] && cp $SSH_PUBFILE "$lxc_rootfs/root/.ssh/authorized_keys"

echo "setting APT configuration"
cat <<EOT >"$lxc_rootfs/etc/apt/sources.list"
deb $DEBIAN_MIRROR $DEBIAN_SUITE main
deb $DEBIAN_MIRROR_2 $DEBIAN_SUITE main
EOT

echo "creating configuration file $lxc_config"
cat <<EOT >$lxc_config
lxc.utsname = $lxc_name
lxc.network.type = veth
lxc.network.flags = up
lxc.network.link = $BRIDGE_INTERFACE
lxc.network.name = eth0
lxc.network.hwaddr = $macaddr
lxc.pts = 1024
#lxc.console =
lxc.tty = 4
lxc.mount.entry=proc $lxc_rootfs/proc proc nodev,noexec,nosuid 0 0
lxc.mount.entry=devpts $lxc_rootfs/dev/pts devpts defaults 0 0
lxc.mount.entry=sysfs $lxc_rootfs/sys sysfs defaults  0 0
lxc.rootfs = $lxc_rootfs

# devices
lxc.cgroup.devices.deny = a
# /dev/null and zero
lxc.cgroup.devices.allow = c 1:3 rwm
lxc.cgroup.devices.allow = c 1:5 rwm
# consoles
lxc.cgroup.devices.allow = c 5:1 rwm
lxc.cgroup.devices.allow = c 5:0 rwm
lxc.cgroup.devices.allow = c 4:0 rwm
lxc.cgroup.devices.allow = c 4:1 rwm
# /dev/{,u}random
lxc.cgroup.devices.allow = c 1:9 rwm
lxc.cgroup.devices.allow = c 1:8 rwm
lxc.cgroup.devices.allow = c 136:* rwm
lxc.cgroup.devices.allow = c 5:2 rwm
# rtc
lxc.cgroup.devices.allow = c 254:0 rwm
EOT

echo "starting container with lxc-start"
lxc-start -d -n $lxc_name

echo "adding SSH keys in known_hosts file"
ssh-keyscan $lxc_name >>$SSH_KNOWNHOSTS_FILE 2>/dev/null
ssh-keyscan $ipaddr >>$SSH_KNOWNHOSTS_FILE 2>/dev/null

echo "Done."

